name: Blue/Green Rollback Workflow

on:
  release:
    types: [unpublished]
    #branches:
    #  - main
  workflow_dispatch:
    outputs:
      HISTORY_ID:
        description: "argocd app history id"
        value: ${{ steps.history_id.outputs.HISTORY-ID }}
    inputs:
      ARGOCD_ROLLBACK:
        description: 'argocd app history for rollback'
        required: true
        type: string
        default: '1'

env:
  CLUSTER_NAME: snocko-demo-cluster # Change to your cluster name
  REGION: '${{ secrets.AWS_REGION }}'

jobs:

  rollback:
    runs-on: ubuntu-latest
    name: Argocd Rollback
    steps:
      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Configure Kubectl
        uses: azure/setup-kubectl@v3
        id: install 
        with:
          version: 'v1.23.6'   
      - name: Update KubeConfig
        continue-on-error: true
        run: |
          aws eks --region $REGION update-kubeconfig --name $CLUSTER_NAME
      - name: argocd cli install 
        id: argocd_cli_install
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
      - name: get argocd login
        run: |
          kubectl config set-context --current --namespace=argocd
      - name: get argocd server
        run: |
          argocd login --core
      - name: argocd get application
        continue-on-error: true
        run: |
          argocd app get $(argocd app list --output name)
      - name: Get argocd app history
        id: history_id
        continue-on-error: true
        run: |
          echo "HISTORY-ID=$(argocd app history $(argocd app list --output name))" >> $GITHUB_OUTPUT
      - name: Rollback
        run: |
          export APP_NAME=$(argocd app list --output name)
          #export HISTORY-ID=$(argocd app history $(argocd app list argocd app list --output name) | awk 'END{print}' | awk '{print $1}')
          argocd app rollback $APP_NAME ${{ github.event.inputs.ARGOCD_ROLLBACK }}
      - name: argocd get application
        continue-on-error: true
        run: |
          argocd app get $(argocd app list --output name)
          