name: Get History ID Workflow

on:
  release:
    types: [unpublished]
    #branches:
    #  - main
  workflow_dispatch:

env:
  CLUSTER_NAME: snocko-demo-cluster # Change to your cluster name
  REGION: '${{ secrets.AWS_REGION }}'

jobs:

  rollback1:
    runs-on: ubuntu-latest
    name: Get History ID
    outputs:
      HISTORY-ID: ${{ steps.history_id.outputs.HISTORY-ID }}
    steps:
      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Configure Kubectl
        uses: azure/setup-kubectl@v3
        id: install 
        with:
          version: 'v1.23.6'   
      - name: Update KubeConfig
        continue-on-error: true
        run: |
          aws eks --region $REGION update-kubeconfig --name $CLUSTER_NAME
      - name: argocd cli install 
        id: argocd_cli_install
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
      - name: get argocd login
        run: |
          kubectl config set-context --current --namespace=argocd
      - name: get argocd server
        run: |
          argocd login --core
      - name: argocd get application
        continue-on-error: true
        run: |
          argocd app get $(argocd app list --output name)
      - name: Get argocd app history
        id: history_id
        continue-on-error: true
        run: |
          argocd app history $(argocd app list --output name) >> history-id
      - name: Upload history_id
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: history-id
          path: ./history-id
          if-no-files-found: error
          retention-days: 30



          